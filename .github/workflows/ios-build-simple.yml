name: iOS Build Simple

on:
  push:
    branches: [main, develop]
  workflow_dispatch:

env:
  DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
  PRODUCT_NAME: SoundToLightTherapyApp
  BUNDLE_ID: com.yourcompany.soundtolighttherapy

jobs:
  build-ios:
    name: Build iOS App
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Show Xcode Version
        run: |
          xcode-select --print-path
          xcodebuild -version
          swift --version

      - name: Create Resources Directory and Info.plist
        run: |
          mkdir -p Resources/iOS
          cat > Resources/iOS/Info.plist << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>CFBundleDevelopmentRegion</key>
              <string>en</string>
              <key>CFBundleDisplayName</key>
              <string>Sound to Light Therapy</string>
              <key>CFBundleExecutable</key>
              <string>SoundToLightTherapyApp</string>
              <key>CFBundleIdentifier</key>
              <string>${{ env.BUNDLE_ID }}</string>
              <key>CFBundleInfoDictionaryVersion</key>
              <string>6.0</string>
              <key>CFBundleName</key>
              <string>${{ env.PRODUCT_NAME }}</string>
              <key>CFBundlePackageType</key>
              <string>APPL</string>
              <key>CFBundleShortVersionString</key>
              <string>1.0.0</string>
              <key>CFBundleVersion</key>
              <string>1</string>
              <key>LSRequiresIPhoneOS</key>
              <true/>
              <key>UILaunchStoryboardName</key>
              <string>LaunchScreen</string>
              <key>UIRequiredDeviceCapabilities</key>
              <array>
                  <string>armv7</string>
              </array>
              <key>UISupportedInterfaceOrientations</key>
              <array>
                  <string>UIInterfaceOrientationPortrait</string>
                  <string>UIInterfaceOrientationLandscapeLeft</string>
                  <string>UIInterfaceOrientationLandscapeRight</string>
              </array>
              <key>NSMicrophoneUsageDescription</key>
              <string>This app uses the microphone to detect sound frequencies for therapeutic light synchronization.</string>
              <key>UIViewControllerBasedStatusBarAppearance</key>
              <false/>
              <key>ITSAppUsesNonExemptEncryption</key>
              <false/>
          </dict>
          </plist>
          EOF

      - name: Build iOS Executable and Create App Bundle
        run: |
          # Create output directory
          mkdir -p build
          APP_BUNDLE="build/${{ env.PRODUCT_NAME }}.app"
          mkdir -p "$APP_BUNDLE"

          # Find all Swift files
          echo "Finding Swift source files..."
          find Sources -name "*.swift" -type f

          # Get iOS SDK path
          IOS_SDK_PATH="$(xcrun --sdk iphoneos --show-sdk-path)"
          echo "Using iOS SDK: $IOS_SDK_PATH"

          # Compile Swift files to iOS executable
          echo "Compiling Swift files..."
          swiftc -target arm64-apple-ios17.0 \
            -sdk "$IOS_SDK_PATH" \
            -O \
            -module-name SoundToLightTherapy \
            -emit-executable \
            -o "$APP_BUNDLE/SoundToLightTherapyApp" \
            Sources/SoundToLightTherapy/**/*.swift \
            -import-objc-header Sources/SoundToLightTherapy/SoundToLightTherapy-Bridging-Header.h 2>/dev/null || \
          swiftc -target arm64-apple-ios17.0 \
            -sdk "$IOS_SDK_PATH" \
            -O \
            -module-name SoundToLightTherapy \
            -emit-executable \
            -o "$APP_BUNDLE/SoundToLightTherapyApp" \
            Sources/SoundToLightTherapy/**/*.swift

          # Copy Info.plist
          cp Resources/iOS/Info.plist "$APP_BUNDLE/"

          # Verify the app bundle
          echo "App bundle contents:"
          ls -la "$APP_BUNDLE"

          # Check if executable was created
          if [ -f "$APP_BUNDLE/SoundToLightTherapyApp" ]; then
            echo "✅ Executable created successfully"
            file "$APP_BUNDLE/SoundToLightTherapyApp"
          else
            echo "❌ Failed to create executable"
            exit 1
          fi

      - name: Create IPA
        run: |
          # Create IPA manually from app bundle
          mkdir -p build/Payload
          cp -r build/${{ env.PRODUCT_NAME }}.app build/Payload/

          # Create IPA (which is just a ZIP file)
          cd build
          zip -r ${{ env.PRODUCT_NAME }}.ipa Payload/
          cd ..

          # Verify IPA was created
          ls -la build/*.ipa

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-build-artifacts
          path: |
            build/*.ipa
            build/${{ env.PRODUCT_NAME }}.app
          retention-days: 30
