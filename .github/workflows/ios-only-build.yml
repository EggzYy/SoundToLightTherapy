name: iOS Only Build

on:
  workflow_dispatch:

env:
  DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer

jobs:
  build-ios:
    name: Build iOS Only App
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Create iOS Only Source Code
        run: |
          echo "Creating pure iOS-only source code..."

          mkdir -p iOSOnly

          # Create a pure iOS-only therapeutic app
          cat > iOSOnly/main.swift << 'EOF'
          import SwiftUI
          import AVFoundation
          import UIKit

          @main
          struct SoundToLightTherapyApp: App {
              var body: some Scene {
                  WindowGroup {
                      TherapyView()
                  }
              }
          }

          struct TherapyView: View {
              @State private var isListening = false
              @State private var permissionGranted = false
              @State private var flashlightOn = false
              @State private var audioLevel: Float = 0.0

              var body: some View {
                  VStack(spacing: 30) {
                      Text("ðŸŽµðŸ’¡")
                          .font(.system(size: 60))

                      Text("Sound to Light Therapy")
                          .font(.largeTitle)
                          .fontWeight(.bold)
                          .multilineTextAlignment(.center)

                      Text("iOS Therapeutic App")
                          .font(.title2)
                          .foregroundColor(.blue)

                      // Audio level indicator
                      VStack {
                          Text("Audio Level: \(audioLevel, specifier: "%.2f")")
                          ProgressView(value: audioLevel, in: 0...1)
                              .progressViewStyle(LinearProgressViewStyle())
                      }
                      .padding()

                      // Control buttons
                      VStack(spacing: 20) {
                          Button(isListening ? "Stop Therapy" : "Start Therapy") {
                              toggleTherapy()
                          }
                          .padding()
                          .background(isListening ? Color.red : Color.green)
                          .foregroundColor(.white)
                          .cornerRadius(10)

                          Button(flashlightOn ? "Flashlight OFF" : "Flashlight ON") {
                              toggleFlashlight()
                          }
                          .padding()
                          .background(flashlightOn ? Color.orange : Color.blue)
                          .foregroundColor(.white)
                          .cornerRadius(10)
                      }

                      if !permissionGranted {
                          Text("Microphone permission needed for therapy")
                              .font(.caption)
                              .foregroundColor(.red)
                              .padding()
                      }

                      Spacer()

                      Text("If you can see this, the iOS build is working! ðŸŽ‰")
                          .font(.caption)
                          .foregroundColor(.secondary)
                  }
                  .padding()
                  .onAppear {
                      requestMicrophonePermission()
                  }
              }

              private func toggleTherapy() {
                  isListening.toggle()
                  if isListening {
                      startAudioCapture()
                  } else {
                      stopAudioCapture()
                  }
              }

              private func toggleFlashlight() {
                  guard let device = AVCaptureDevice.default(for: .video),
                        device.hasTorch else { return }

                  do {
                      try device.lockForConfiguration()
                      device.torchMode = flashlightOn ? .off : .on
                      flashlightOn.toggle()
                      device.unlockForConfiguration()
                  } catch {
                      print("Flashlight error: \(error)")
                  }
              }

              private func requestMicrophonePermission() {
                  AVAudioApplication.requestRecordPermission { granted in
                      DispatchQueue.main.async {
                          self.permissionGranted = granted
                      }
                  }
              }

              private func startAudioCapture() {
                  // Simulate audio capture for demo
                  Timer.scheduledTimer(withTimeInterval: 0.1, repeats: true) { timer in
                      if !isListening {
                          timer.invalidate()
                          return
                      }
                      audioLevel = Float.random(in: 0...1)

                      // Sync flashlight to audio level
                      if audioLevel > 0.5 {
                          toggleFlashlight()
                      }
                  }
              }

              private func stopAudioCapture() {
                  audioLevel = 0.0
                  if flashlightOn {
                      toggleFlashlight()
                  }
              }
          }
          EOF

      - name: Build Pure iOS App
        run: |
          echo "Building pure iOS app..."

          # Get iOS SDK path
          IOS_SDK=$(xcrun --sdk iphoneos --show-sdk-path)
          echo "Using iOS SDK: $IOS_SDK"

          # Create app bundle
          mkdir -p build/SoundToLightTherapy.app

          # Compile iOS-only app
          xcrun --sdk iphoneos swiftc \
            -target arm64-apple-ios17.0 \
            -sdk "$IOS_SDK" \
            -o build/SoundToLightTherapy.app/SoundToLightTherapy \
            iOSOnly/main.swift \
            -framework SwiftUI \
            -framework Foundation \
            -framework UIKit \
            -framework AVFoundation

          echo "âœ… iOS-only app compiled successfully!"

          # Verify binary
          file build/SoundToLightTherapy.app/SoundToLightTherapy

      - name: Create iOS App Bundle
        run: |
          # Create Info.plist for iOS
          cat > build/SoundToLightTherapy.app/Info.plist << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>CFBundleDisplayName</key>
              <string>Sound Light Therapy</string>
              <key>CFBundleExecutable</key>
              <string>SoundToLightTherapy</string>
              <key>CFBundleIdentifier</key>
              <string>com.eggzy.soundlighttherapy</string>
              <key>CFBundleName</key>
              <string>SoundToLightTherapy</string>
              <key>CFBundlePackageType</key>
              <string>APPL</string>
              <key>CFBundleShortVersionString</key>
              <string>2.0</string>
              <key>CFBundleVersion</key>
              <string>1</string>
              <key>LSRequiresIPhoneOS</key>
              <true/>
              <key>NSMicrophoneUsageDescription</key>
              <string>This app uses microphone to detect sound for therapeutic light sync.</string>
              <key>UISupportedInterfaceOrientations</key>
              <array>
                  <string>UIInterfaceOrientationPortrait</string>
              </array>
              <key>UIRequiredDeviceCapabilities</key>
              <array>
                  <string>arm64</string>
              </array>
          </dict>
          </plist>
          EOF

          chmod +x build/SoundToLightTherapy.app/SoundToLightTherapy

          echo "iOS app bundle created:"
          ls -la build/SoundToLightTherapy.app/

      - name: Create IPA
        run: |
          mkdir -p build/Payload
          cp -r build/SoundToLightTherapy.app build/Payload/

          cd build
          zip -r SoundToLightTherapy-iOS-Only.ipa Payload/
          cd ..

          echo "âœ… iOS-only therapeutic app IPA created:"
          ls -la build/*.ipa

      - name: Upload iOS Only Build
        uses: actions/upload-artifact@v4
        with:
          name: ios-only-build
          path: |
            build/*.ipa
            build/SoundToLightTherapy.app/
          retention-days: 7
