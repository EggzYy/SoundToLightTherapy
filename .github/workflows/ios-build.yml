name: iOS Build and Deploy

on:
  push:
    branches: [main, develop]
    tags:
      - "v*"
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      build_type:
        description: "Build type"
        required: true
        default: "debug"
        type: choice
        options:
          - debug
          - release

env:
  DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
  PRODUCT_NAME: SoundToLightTherapy
  BUNDLE_ID: com.yourcompany.soundtolighttherapy
  SCHEME_NAME: SoundToLightTherapyApp

jobs:
  build-ios:
    name: Build iOS App
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Show Xcode Version
        run: |
          xcode-select --print-path
          xcodebuild -version
          swift --version

      - name: Cache Swift Package Manager
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/org.swift.swiftpm
            .build
          key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Resolve Swift Package Dependencies
        run: |
          # Modern approach: Swift Package Manager integrates directly with Xcode
          # No need to generate Xcode project - we'll build directly with SPM
          swift package resolve

          # Show resolved dependencies for debugging
          swift package show-dependencies

      - name: Create Info.plist

        run: |
          mkdir -p Resources/iOS
          cat > Resources/iOS/Info.plist << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>CFBundleDevelopmentRegion</key>
              <string>en</string>
              <key>CFBundleDisplayName</key>
              <string>Sound to Light Therapy</string>
              <key>CFBundleExecutable</key>
              <string>$(EXECUTABLE_NAME)</string>
              <key>CFBundleIdentifier</key>
              <string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
              <key>CFBundleInfoDictionaryVersion</key>
              <string>6.0</string>
              <key>CFBundleName</key>
              <string>$(PRODUCT_NAME)</string>
              <key>CFBundlePackageType</key>
              <string>APPL</string>
              <key>CFBundleShortVersionString</key>
              <string>1.0.0</string>
              <key>CFBundleVersion</key>
              <string>1</string>
              <key>LSRequiresIPhoneOS</key>
              <true/>
              <key>UILaunchStoryboardName</key>
              <string>LaunchScreen</string>
              <key>UIRequiredDeviceCapabilities</key>
              <array>
                  <string>armv7</string>
              </array>
              <key>UISupportedInterfaceOrientations</key>
              <array>
                  <string>UIInterfaceOrientationPortrait</string>
                  <string>UIInterfaceOrientationLandscapeLeft</string>
                  <string>UIInterfaceOrientationLandscapeRight</string>
              </array>
              <key>UISupportedInterfaceOrientations~ipad</key>
              <array>
                  <string>UIInterfaceOrientationPortrait</string>
                  <string>UIInterfaceOrientationPortraitUpsideDown</string>
                  <string>UIInterfaceOrientationLandscapeLeft</string>
                  <string>UIInterfaceOrientationLandscapeRight</string>
              </array>
              <key>NSMicrophoneUsageDescription</key>
              <string>This app uses the microphone to detect sound frequencies for therapeutic light synchronization.</string>
              <key>UIViewControllerBasedStatusBarAppearance</key>
              <false/>
              <key>ITSAppUsesNonExemptEncryption</key>
              <false/>
          </dict>
          </plist>
          EOF

      - name: Create PrivacyInfo.xcprivacy

        run: |
          cat > Resources/iOS/PrivacyInfo.xcprivacy << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>NSPrivacyTracking</key>
              <false/>
              <key>NSPrivacyCollectedDataTypes</key>
              <array/>
              <key>NSPrivacyAccessedAPITypes</key>
              <array>
                  <dict>
                      <key>NSPrivacyAccessedAPIType</key>
                      <string>NSPrivacyAccessedAPICategoryMicrophone</string>
                      <key>NSPrivacyAccessedAPITypeReasons</key>
                      <array>
                          <string>3B52.1</string>
                      </array>
                  </dict>
              </array>
          </dict>
          </plist>
          EOF

      - name: Build for iOS Simulator (Debug)
        if: github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == ''
        run: |
          # Build with Swift Package Manager for iOS simulator
          swift build \
            --triple arm64-apple-ios17.0-simulator \
            -c debug

      - name: Build for iOS Device (Release)
        if: github.event.inputs.build_type == 'release' || startsWith(github.ref, 'refs/tags/')
        run: |
          # Build with Swift Package Manager for iOS device
          swift build \
            --triple arm64-apple-ios17.0 \
            -c release

      - name: Create iOS App Bundle (Release)
        if: github.event.inputs.build_type == 'release' || startsWith(github.ref, 'refs/tags/')
        run: |
          # Create app bundle structure
          mkdir -p build/${{ env.PRODUCT_NAME }}.app

          # Copy the built executable
          cp .build/arm64-apple-ios17.0/release/SoundToLightTherapyApp build/${{ env.PRODUCT_NAME }}.app/${{ env.PRODUCT_NAME }}

          # Copy iOS resources
          cp Resources/iOS/Info.plist build/${{ env.PRODUCT_NAME }}.app/
          cp Resources/iOS/PrivacyInfo.xcprivacy build/${{ env.PRODUCT_NAME }}.app/

          # Make executable
          chmod +x build/${{ env.PRODUCT_NAME }}.app/${{ env.PRODUCT_NAME }}

      - name: Create IPA (Release)
        if: github.event.inputs.build_type == 'release' || startsWith(github.ref, 'refs/tags/')
        run: |
          # Create IPA manually from app bundle
          mkdir -p build/Payload
          cp -r build/${{ env.PRODUCT_NAME }}.app build/Payload/

          # Create IPA (which is just a ZIP file)
          cd build
          zip -r ${{ env.PRODUCT_NAME }}.ipa Payload/
          cd ..

          # Verify IPA was created
          ls -la build/*.ipa

      - name: Upload Build Artifacts
        if: github.event.inputs.build_type == 'release' || startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: ios-build-artifacts
          path: |
            build/*.ipa
            build/${{ env.PRODUCT_NAME }}.app
          retention-days: 30

  # Test job for running unit tests
  test-ios:
    name: Test iOS App
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Cache Swift Package Manager
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/org.swift.swiftpm
            .build
          key: ${{ runner.os }}-spm-test-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-test-
            ${{ runner.os }}-spm-

      - name: Run Tests

        run: |
          # First try SwiftPM tests
          swift test --parallel

          # If we have an Xcode project, also run iOS-specific tests
          if [ -f "SoundToLightTherapy.xcodeproj/project.pbxproj" ]; then
            xcodebuild test \
              -project SoundToLightTherapy.xcodeproj \
              -scheme ${{ env.SCHEME_NAME }} \
              -destination 'platform=iOS Simulator,name=iPhone 15 Pro,OS=latest' \
              -configuration Debug
          fi
